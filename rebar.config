%% -*- mode: erlang; indent-tabs-mode: nil -*-

{erl_opts, [debug_info]}.
{minimum_otp_vsn, "21.0"}.

{deps, [ {aesophia, {git, "https://github.com/radrow/aesophia.git",
                     {branch, "repl-prep"}}}
       , {aebytecode, {git, "https://github.com/aeternity/aebytecode.git",
                       {ref,"5e16b85"}}}
       , {aeserialization, {git, "https://github.com/aeternity/aeserialization.git",
                            {ref,"47aaa8f"}}}
       , {trace_runner, {git, "git://github.com/uwiger/trace_runner.git",
                        {ref, "303ef2f"}}}
       , {ecrecover, {git, "https://github.com/aeternity/ecrecover.git",
                     {ref, "b3b6421"}}}
       , {gproc, "0.6.1"}
       , {jobs, "0.9.0"}
       , {exometer_core, "1.5.7"}
       , {yamerl, "0.7.0"}
       , {sext, "1.5.0"}
       , {eper, "0.99.1"}
       , {sha3, {git, "https://github.com/aeternity/erlang-sha3",
                 {ref, "c818ddc"}}}
       , {enacl, {git, "https://github.com/aeternity/enacl.git",
                  {ref, "26180f4"}}}
       , {enoise, {git, "https://github.com/aeternity/enoise.git",
                   {ref, "1e6ee67"}}}
       , {idna, {git, "https://github.com/benoitc/erlang-idna",
                 {ref, "6cff727"}}} % tag: 6.0.0
       , {nat, {git, "https://github.com/aeternity/erlang-nat.git",
                {ref, "dcdfb9c"}}}
       , {lager, {git, "https://github.com/aeternity/lager.git",
                {ref, "9d97ae3"}}}
       , {aeminer, {git, "https://github.com/aeternity/aeminer.git",
                    {ref, "0a82f0f"}}}
       , {mnesia_rocksdb, {git, "https://github.com/aeternity/mnesia_rocksdb.git",
                           {ref, "8d3079f"}}}
       , {ranch, {git,"https://github.com/ninenines/ranch",
                  {ref,"55c2a9d623454f372a15e99721a37093d8773b48"}}}
       ]}.

{escript_main_app, aerepl}.
{escript_incl_apps, [aerepl, aesophia, aebytecode, enacl, aefate, aetx, aecontract, aecore]}.
% {escript_incl_extra, [{"_build/default/lib/enacl/priv/"}]}.

{dialyzer, [ {warnings, [unknown]}
           , {plt_apps, all_deps}
           , {base_plt_apps, [erts, kernel, stdlib, crypto, mnesia]}
           ]}.

{relx, [{release, {aerepl, "1.1.2"},
         [ aerepl, ranch, aesophia, aebytecode, parse_trans, aecore, aefate, aetx, enacl
         , {rocksdb, load}, {mnesia_rocksdb, load}
         ]},

        {dev_mode, true},
        {vm_args, "config/vm.args"},
        {sys_config, "config/sys.config"},
        {include_erts, false},

        {overlay, [{copy, "VERSION" , "VERSION"},
                   {mkdir, "../aeternity/data/aecore/.genesis"},
                   {copy, "node/data/aecore/.genesis/accounts.json", "../aeternity/data/aecore/.genesis/accounts.json"},
                   {copy, "node/data/aecore/.genesis/accounts_test.json", "../aeternity/data/aecore/.genesis/accounts_test.json"}
                  ]},

        {extended_start_script, true},
        {extended_start_script_extensions, [
              {check_config, "extensions/check_config"},
              {keys_gen, "extensions/keys_gen"},
              {peer_key, "extensions/peer_key"},
              {export, "extensions/export_chain"},
              {messages_hash, "extensions/messages_hash"}
        ]}
       ]}.

{shell, [ {apps, [aerepl, aesophia, aebytecode]}
        ]}.

{pre_hooks,
  [ {compile, "erlc node/test/ct_eunit_xform.erl"}
  , {eunit, "erlc node/test/ct_eunit_xform.erl"}
  , {release, "erlc node/test/ct_eunit_xform.erl"}
  ]}.
{post_hooks,
  [ {compile, "rm -f ct_eunit_xform.beam"}
  , {eunit, "rm -f ct_eunit_xform.beam"}
  , {release, "rm -f ct_eunit_xform.beam"}
  ]}.


{erl_opts, [debug_info, {parse_transform, lager_transform},
            {lager_extra_sinks, [epoch_mining,
                                 epoch_metrics,
                                 epoch_sync,
                                 estratum]}]}.

% To expose some internal functions
{overrides, [
  {override, aetx, [
    {erl_opts, [{d, 'TEST'},
                {parse_transform, lager_transform},
                debug_info
                ]
    }]}
  ]}.

{profiles, [{prod, [{relx, [{dev_mode, false}
                           ,{include_erts, true}]}]}]}.
