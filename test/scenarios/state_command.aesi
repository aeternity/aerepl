{"datatype state = ST(int)"
, {error, typedef_state}
}.

{ ":state ST(1)"
, {error, {repl_sophia, "1:2:Unbound variable `ST`"}}
}.

{ ":state 1"
, {match, ok}
}.

{ ":type state"
, {match, {id, '_', "int"}}
}.

{ "datatype dt = D(int)"
, {match, ok}
}.

{ ":state D(1)"
, {match, ok}
}.

{ "datatype d = S(state)"
, {match, ok}
}.

{ "let x = state"
, {match, ok}
}.

{ "datatype dt = X(int)"
, {match, ok}
}.

{ "x"
, {match, {app, '_', {con, '_', "D"}, [{int, '_', 1}]}}
}.

{ ":state X(1)"
, {match, ok}
}.

{ ":t x"
, {error, {repl_sophia, "1:2:Unbound variable `x`"}}
}.
